#hh1 {
    text-align: center;
    color:rgb(255, 255, 255);
    font-size:42px;
    font-family: 'Lato', sans-serif;

   
}
input::placeholder{
color: rgba(255, 255, 255, 0.651);

}
#pi1{


}
#pi2{


}
#pi {
width: 97%;
  display: flex;
  flex-direction: row;
 justify-content: space-around;
   position: absolute;

}
#coi{

  display: flex;
   flex-direction: row;
   justify-content: center;
   align-items: center;
   bottom: 30%;
}

#v1 {

  position: absolute;
  bottom: 40%;

}
#d1 {

  position: absolute;
  bottom: 43%;

}

#d2 {
    font-size: 300%;
 
    position: absolute;
    bottom: 50%;
    width: 50%;
 
}

#s1 {
  height: 300px;
   display: flex;
   flex-direction: column;
   justify-content: center;
   align-items: center;
    border-radius: 10px;
    padding: 5px;

    
    }

    #d3 {
      letter-spacing: 10%;
      position: absolute;
      bottom: 28%;
     
   
  }
#d4 {
   position: absolute;
   bottom: 85%;
   margin: auto;   

}



#b1 {

  position: absolute;
  bottom: 35%;

}
#banana{
  position: absolute;
  bottom: 27%;
}

/* agua
*/


svg{

}

@import url(//fonts.googleapis.com/css?family=Lato:300:400);

body {

  text-align:center;

  background: linear-gradient(to right, #414345, #232526);
  color:rgb(255, 255, 255);
  margin:0;
}

h1 {
  font-family: 'Lato', sans-serif;
  font-weight:300;
  letter-spacing: 2px;
  font-size: 90px;
}
p {
  font-family: 'Lato', sans-serif;
  letter-spacing: 1px;
  font-size:14px;
  color: #333333;
}

.header {
   

}



.logo {
  width:50px;
  fill:rgb(255, 255, 255);
  padding-right:15px;
  display:inline-block;
  vertical-align: middle;
}

.inner-header {
  height:30vh;
  width:100%;
  margin: 0;
  padding: 0;
}

.flex { /*Flexbox for containers*/
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
}

.waves {

  position:relative;
  width: 100%;
  height:15vh;
  margin-bottom:-7px; 
  min-height:100px;
  max-height:150px;
}

.content {
 
    position:relative;
    height:20vh;
    text-align:center;
    background-color: rgb(252, 252, 252);
  }

/* Animation */

.parallax > use {
  animation: move-forever 25s cubic-bezier(.55,.5,.45,.5)infinite;
}
.parallax > use:nth-child(1) {
  animation-delay: -2s;
  animation-duration: 7s;
}
.parallax > use:nth-child(2) {
  animation-delay: -3s;
  animation-duration: 10s;
}
.parallax > use:nth-child(3) {
  animation-delay: -4s;
  animation-duration: 13s;
}
.parallax > use:nth-child(4) {
  animation-delay: -5s;
  animation-duration: 20s;
}
@keyframes move-forever {
  0% {
   transform: translate3d(-90px,0,0);
  }
  100% { 
    transform: translate3d(85px,0,0);
  }
}
@media (max-width: 768px) {
  .waves {

    height:40px;
    min-height:40px;
  }
  .content {
    height:30vh;
  }
  h1 {
    font-size:24px;
  }
}





/* os butao
*/





@import url('https://fonts.googleapis.com/css2?family=Ubuntu:wght@700&display=swap');


.multi-button {

  position: absolute;
  bottom: 20%;

}





.button { 

  box-shadow: 2px 5px 10px;
  padding: 10px 17px 10px 17px;
  font: 15px Ubuntu;
  color: rgb(0, 0, 0);
  border-radius: 7px;
}

.button span {
  cursor: pointer;
  display: inline-block;
  position: relative;
  transition: 0.5s;
}

.button span:after {
  position: absolute;
  opacity: 0;

  right: -20px;
  transition: 0.5s;
}

.button:hover span {
  padding-right: 25px;
}

.button:hover span:after {
  opacity: 1;
  right: 0;
}

#cut span:after {
  font-family: FontAwesome;
  content: "\f186";
}

#copy span:after {
  font-family: FontAwesome;
  content: "\f11b";
}

#paste span:after {
  font-family: FontAwesome;
  content: "\f071 ";
}

/* oiuo
*/

@import url("https://fonts.googleapis.com/css?family=Lato:400,700&display=swap");


/* svg */
#svg1 {
  display: block;
  width: 90vw;
  max-width: 250px;
  height: auto;
  margin: 1rem;
  color: hsl(0, 0%, 93%);
}

/* when the .hide class is added to the svg scale the elements to show the closed eye */
svg.hide .eyelid,
svg.hide .brows {
  transform: scaleY(-1);
}
svg.hide .eyeball {
  transform: scale(0);
}

/* for browsers supporting the d property transition the properties to have the eyes close/open */
@supports (d: path("")) {
  svg .eyelid,
  svg .brows path,
  svg .eyeball {
    transition: transform 0.5s ease-in-out, d 0.5s ease-in-out;
  }
  svg.hide .eyelid,
  svg.hide .brows,
  svg.hide .eyeball {
    transform: initial;
  }

  svg.hide .eyelid {
    d: path("M -30 0 c 15 20 45 20 60 0");
  }
  svg.hide .eyeball {
    transform: scaleY(0);
  }
  svg.hide .brows path:first-of-type {
    d: path("M -16 12 q -5 0 -8 8");
  }
  svg.hide .brows path:nth-of-type(2) {
    d: path("M 0 16 v 8");
  }
  svg.hide .brows path:last-of-type {
    d: path("M 16 12 q 5 0 8 8");
  }
}

/* form */
/* display the elements in a column */
form {
  padding: 1.5rem 2rem;
 
  color: hsl(0, 0%, 89%);
  max-width: 300px;
  width: 95vw;
  display: flex;
  flex-direction: column;
 
}
form > * + * {
  margin-top: 0.5rem;
}
form label {
  display: block;
  font-weight: 700;
}
form input {
  padding: 0.5rem;
  border: 2px solid currentColor;
  background: none;
  font-size: 1rem;
  font-family: inherit;
  color: inherit;
  outline: none;
}
form button {
  background: hsl(0, 0%, 100%);
  border: none;
  color: hsl(0, 0%, 0%);
  font-size: 0.9rem;
  text-transform: uppercase;
  font-family: inherit;
  padding: 0.5rem 1rem;
}

/* for browsers supporting grid properties create the following layout
label label
input button
*/
@supports (display: grid) {
  form {
    display: grid;
    grid-template-columns: 2fr 1fr;
  }
  form label {
    grid-column: 1/-1;
  }
  form input {
    border-right: none;
    width: 100%;
  }
}










